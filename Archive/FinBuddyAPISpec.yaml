openapi: 3.0.0
info:
  title: FinBuddy API
  version: 1.0.0

paths:
  /auth/signup:
    post:
      summary: Register a new user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSignup'
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad request

  /auth/login:
    post:
      summary: Authenticate and log in a user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
      responses:
        '200':
          description: User authenticated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Invalid credentials
  /auth/logout:
    post:
      summary: Log out the authenticated user
      responses:
        '204':
          description: User logged out successfully

  /users:
    get:
      summary: Get all users (admin only)

  /users/{id}:
    get:
      summary: Get user by ID

    put:
      summary: Update user by ID

    delete:
      summary: Delete user by ID

  /transactions:
    get:
      summary: Get all transactions for the authenticated user
      responses:
        '200':
          description: Transactions retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
        '401':
          description: Unauthorized

    post:
      summary: Create a new transaction for the authenticated user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
      responses:
        '201':
          description: Transaction created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '400':
          description: Bad request
        '401':
          description: Unauthorized

  /transactions/{id}:
    get:
      summary: Get transaction by ID for the authenticated user
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Transaction found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '404':
          description: Transaction not found
        '401':
          description: Unauthorized

    put:
      summary: Update transaction by ID for the authenticated user
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
      responses:
        '200':
          description: Transaction updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '400':
          description: Bad request
        '404':
          description: Transaction not found
        '401':
          description: Unauthorized

    delete:
      summary: Delete transaction by ID for the authenticated user
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Transaction deleted successfully
        '404':
          description: Transaction not found
        '401':
          description: Unauthorized

  /categories:
    get:
      summary: Get all categories
      responses:
        '200':
          description: Categories retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'

  /insights/{userId}:
    get:
      summary: Get personalized financial insights for a user
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Insights generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insights'
        '404':
          description: User not found
        '401':
          description: Unauthorized

  /budgets:
    get:
      summary: Get all budgets for the authenticated user
      responses:
        '200':
          description: Budgets retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Budget'
        '401':
          description: Unauthorized

    post:
      summary: Create a new budget for the authenticated user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Budget'
      responses:
        '201':
          description: Budget created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Budget'
        '400':
          description: Bad request
        '401':
          description: Unauthorized

  /budgets/{id}:
    get:
      summary: Get budget by ID for the authenticated user
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Budget found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Budget'
        '404':
          description: Budget not found
        '401':
          description: Unauthorized

    put:
      summary: Update budget by ID for the authenticated user
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Budget'
      responses:
        '200':
          description: Budget updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Budget'
        '400':
          description: Bad request
        '404':
          description: Budget not found
        '401':
          description: Unauthorized

    delete:
      summary: Delete budget by ID for the authenticated user
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Budget deleted successfully
        '404':
          description: Budget not found
        '401':
          description: Unauthorized
components:
  schemas:
    Transaction:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        category:
          type: string
        amount:
          type: number
          format: double
        date:
          type: string
          format: date
        description:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Budget:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        category:
          type: string
        amount:
          type: number
          format: double
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Category:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        icon:
          type: string
    Insights:
      type: object
      properties:
        userId:
          type: string
        spendingTrends:
          type: object
          additionalProperties:
            type: number
            format: double
        budgetComparisons:
          type: object
          additionalProperties:
            type: object
            properties:
              actual:
                type: number
                format: double
              budgeted:
                type: number
                format: double
        recommendations:
          type: array
          items:
            type: string
    UserSignup:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
        firstName:
          type: string
        lastName:
          type: string
    UserLogin:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
    AuthResponse:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
        expiresIn:
          type: integer
        user:
          $ref: '#/components/schemas/User'
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
          format: email
        firstName:
          type: string
        lastName:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time